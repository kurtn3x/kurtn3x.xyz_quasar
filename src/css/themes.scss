@use 'sass:map';

$themes: (
  'default': (
    // general primary color, has to be visible on both light and dark backgrounds
    primary: #3b4fb5,
    // layout style, e.g. header, side drawerm dialog header...
    layout-text: #f5f5f5,
    layout-bg: #3b4fb5,
  ),
  'cool-orange': (
    primary: #ee4d2e,
    layout-text: #fff,
    layout-bg: #ee4d2e,
  ),
  'nice-green': (
    primary: #1db992,
    layout-text: #fff,
    layout-bg: #1db992,
  ),
  'olive-green': (
    primary: #bfbc06,
    layout-text: #fff,
    layout-bg: #bfbc06,
  ),
  'epic-blue': (
    primary: #008fff,
    layout-text: #fff,
    layout-bg: #008fff,
  ),
  'dark': (
    primary: #52616b,
    layout-text: #fff,
    layout-bg: #1e2022,
  ),
  'light': (
    primary: #b7c8d4,
    layout-text: #1d1d1d,
    layout-bg: #f0f5f9,
  ),
);

@font-face {
  font-family: 'Poppins';
  src: local('Poppins'), url(Poppins.ttf) format('truetype');
}

.font {
  font-family: 'Poppins', Helvetica, Arial;
}

$LIGHTING_FLOOR: 1;
$LIGHTING_CEIL: 2;
$LIGHTING_FLAT: 3;

@mixin text3d(
  $primary,
  $depth: 5,
  $shadowsteps: 5,
  $shadowincrementer: 3px,
  $shadowopacity: 0.5,
  $primaryshadowcolour: #000,
  $lighting: $LIGHTING_CEIL
) {
  $predefinedShadows: (
    0 0 5px rgba($primaryshadowcolour, 0.05),
    0 -1px 3px rgba($primaryshadowcolour, 0.2),
    0 3px 5px rgba($primaryshadowcolour, 0.2)
  );
  $value: ();
  @for $i from 1 through $depth {
    $num: $i + px;
    $hueadjust: $i;
    @if ($lighting == $LIGHTING_FLOOR) {
      $hueadjust: ($i * 2 - $depth - 5) * 1%;
    } @else if ($lighting == $LIGHTING_CEIL) {
      $hueadjust: -($i * 2 + $depth - 10) * 1%;
    } @else if ($lighting == $LIGHTING_FLAT) {
      $hueadjust: -$depth * 1%;
    }
    $colour: adjust-color($primary, $lightness: $hueadjust);
    $theShadow: 0 $num 0 $colour;
    $value: append($value, $theShadow, comma);
  }

  @for $i from 1 through $shadowsteps {
    @if ($i >= length($predefinedShadows)) {
      $dist: $i * $shadowincrementer;
      $value: append(
        $value,
        0 $dist $dist rgba($primaryshadowcolour, $shadowopacity)
      );
    } @else {
      $value: append($value, nth($predefinedShadows, $i));
    }
  }

  text-shadow: $value;
}

@each $theme, $colors in $themes {
  [data-theme='#{$theme}'] {
    @each $name, $color in $colors {
      .bg-#{$name} {
        background: $color !important;
      }
      .text-#{$name} {
        color: $color !important;
      }
    }

    $primary: map.get($colors, primary);

    .text3d-primary {
      font-family: 'Poppins', Helvetica, Arial;
      color: #fff;

      @include text3d(
        adjust-color($primary, $lightness: -8%),
        $depth: 8,
        $primaryshadowcolour:
          adjust-color($primary, $lightness: -10%, $saturation: +20%),
        $shadowopacity: 0.3
      );
    }
  }
}
